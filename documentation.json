{
    "pipes": [],
    "interfaces": [
        {
            "name": "PokemonData",
            "id": "interface-PokemonData-3ed16eeafa0721328c690ddd082fdd46f85e2f2caa327601844169440e42445c2a48e2f64a82d4acdbbb1c608bece78be17fc91249522abfae1e30b3c38caee7",
            "file": "src/app/shared/PokemonData.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface PokemonData{\r\n  pokemonName: string;\r\n  pokemonTotalStats: number\r\n}\r\n",
            "properties": [
                {
                    "name": "pokemonName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "pokemonTotalStats",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "DataService",
            "id": "injectable-DataService-ec6779ff1436f0380a3e4c40ffbb32677e1d71fbc23cb9f506e6a44c55742872070db3cb10af0a3bd1043d2f915c4f52f3684c8a79c52759870554989401d047",
            "file": "src/app/data.service.ts",
            "properties": [
                {
                    "name": "randomPokemonId",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "totalPokemon",
                    "defaultValue": "1025",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getData",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n  constructor(private http: HttpClient) { }\r\n  private randomPokemonId = 1;\r\n  private totalPokemon = 1025;\r\n\r\n  getData(): Observable<any> {\r\n    this.randomPokemonId = Math.round(Math.random() * this.totalPokemon);\r\n    return this.http.get('https://pokeapi.co/api/v2/pokemon/' + this.randomPokemonId);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-841e8ee8e9c9c4b8e6a588bedfa2c838c5e95756663150951dd2e66fad1361b1065ade70422dd23f729df6dc7550df675110e92a9d08d3947d22af7b62d6318f",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "dataSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "displayedColumnStats",
                    "defaultValue": "['pokemonBaseStatName', 'pokemonBaseStat']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "pokemonImage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "seenPokemon",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<any>",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "totalBaseStats",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "addSeenPokemon",
                    "args": [
                        {
                            "name": "pokemonName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "pokemonTotalStats",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pokemonName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "pokemonTotalStats",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "loadPokemon",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, OnInit} from '@angular/core';\r\nimport { DataService } from \"./data.service\";\r\nimport {\r\n  MatTableDataSource\r\n} from \"@angular/material/table\";\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrl: './app.component.css'\r\n})\r\nexport class AppComponent implements OnInit {\r\n  data: any;\r\n  displayedColumnStats: string[] = ['pokemonBaseStatName', 'pokemonBaseStat'];\r\n  dataSource: any;\r\n  totalBaseStats = 0;\r\n  seenPokemon:Array<any> =[];\r\n  pokemonImage:any;\r\n\r\n\r\n  constructor(private dataService: DataService) {}\r\n\r\n  ngOnInit() {\r\n    this.loadPokemon();\r\n  }\r\n\r\n  addSeenPokemon(pokemonName: string, pokemonTotalStats: number){\r\n    this.seenPokemon.push({pokemonName, pokemonTotalStats});\r\n  }\r\n\r\n  loadPokemon(){\r\n    this.dataService.getData().subscribe(response => {\r\n      this.totalBaseStats = 0;\r\n      this.data = response;\r\n      this.dataSource = new MatTableDataSource(this.data);\r\n      this.dataSource.data.stats.forEach((el:any) => this.totalBaseStats += el.base_stat);\r\n      console.log(this.totalBaseStats);\r\n      this.pokemonImage = this.data.sprites.front_default;\r\n      this.addSeenPokemon(this.data.name, this.totalBaseStats);\r\n    });\r\n\r\n    if(this.seenPokemon.length+1 > 1){\r\n      console.log(this.seenPokemon);\r\n      const value = this.seenPokemon.slice(-1);\r\n      console.log(\"Sliced Value: \");\r\n      console.log(value);\r\n      this.totalBaseStats = value.values().next().value;\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n",
            "styleUrl": "./app.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dataService",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "dataService",
                        "type": "DataService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<!--Content wrapper-->\r\n<link rel=\"preconnect\" href=\"https://raw.githubusercontent.com\">\r\n\r\n\r\n<!--Dark mode enabled-->\r\n\r\n<div>\r\n<!--  <div>-->\r\n<!--    <div> &lt;!&ndash; Start Nav &ndash;&gt;-->\r\n<!--      <nav>-->\r\n<!--        <div>-->\r\n<!--          <h1>-->\r\n<!--            <a href=\"/\"> Pokemon Information</a>-->\r\n<!--          </h1>-->\r\n<!--        </div>-->\r\n<!--        <ul>-->\r\n<!--          <li>-->\r\n<!--            <a href=\"#\">-->\r\n<!--              <span>Home</span>-->\r\n<!--            </a>-->\r\n<!--          </li>-->\r\n<!--          <li>-->\r\n<!--            <a href=\"#\">-->\r\n<!--              <span>About</span>-->\r\n<!--            </a>-->\r\n<!--          </li>-->\r\n<!--          <li>-->\r\n<!--            <a href=\"#\">-->\r\n<!--              <span>Contact</span>-->\r\n<!--            </a>-->\r\n<!--          </li>-->\r\n<!--        </ul>-->\r\n<!--      </nav>-->\r\n<!--    </div> &lt;!&ndash; End Nav &ndash;&gt;-->\r\n\r\n<!--    <main *ngIf=\"data\">-->\r\n<!--      <div>-->\r\n<!--        <a href=\"#\"> Log In</a>-->\r\n<!--        <a href=\"#\"> Sign Up</a>-->\r\n<!--      </div>-->\r\n<!--      <br>-->\r\n<!--      <header>-->\r\n<!--        <h2> Pokemon Name: {{data.name}} </h2>-->\r\n<!--        <h3> Base Stat Total: {{totalBaseStats}} </h3>-->\r\n<!--      </header>-->\r\n<!--      <div>-->\r\n<!--        <h4> Current Pokemon </h4>-->\r\n<!--        <div>-->\r\n<!--          <div>-->\r\n<!--            <img src=\"{{pokemonImage}}\" alt=\"\">-->\r\n<!--          </div>-->\r\n<!--        </div>-->\r\n<!--      </div>-->\r\n<!--      <div>-->\r\n<!--        <div>-->\r\n<!--          Load Another Pokemon-->\r\n<!--        </div>-->\r\n<!--      </div>-->\r\n<!--    </main>-->\r\n<!--  </div>-->\r\n\r\n<!--  <br>-->\r\n<!--  <br>-->\r\n<!--  <br>-->\r\n\r\n<!--  State management with a counter-->\r\n<!--  <app-my-counter></app-my-counter>-->\r\n\r\n<!--  <br>-->\r\n<!--  <br>-->\r\n<!--  <br>-->\r\n\r\n  <!--  State management with a pokemon -->\r\n<!--  <ng-container *ngIf=\"data\">-->\r\n<!--    <app-pokemon></app-pokemon>-->\r\n<!--  </ng-container>-->\r\n\r\n<!--  <br>-->\r\n<!--  <br>-->\r\n<!--  <br>-->\r\n  <div class=\"capitalize text-gray-500 text-lg\">\r\n    <h1 class=\"text-4xl text-gray-600 font-bold uppercase p-4 boarder-b boarder-gray-100\">pokemon data</h1>\r\n\r\n    <div *ngIf=\"data\" class=\"px-16 py-6\">\r\n\r\n      <h2 class=\"font-bold text-xl border-b boarder-gray-200\">{{data.name}}</h2>\r\n      <h3 class=\"font-semibold pb-2\">base stat total: {{totalBaseStats}}</h3>\r\n\r\n      <div class=\"mt-8 pb-8\">\r\n        <img ngSrc=\"{{pokemonImage}}\" width=\"150\" height=\"150\" priority alt=\"{{pokemonImage}}\">\r\n      </div>\r\n\r\n      <!--Table element-->\r\n      <div class=\"pb-2\">\r\n        <mat-card >\r\n          <mat-card-content>\r\n            <div class=\"example-container mat-elevation-z8\">\r\n              <mat-table [dataSource]=\"dataSource.data.stats\">\r\n\r\n                <div matColumnDef=\"pokemonBaseStatName\">\r\n                  <mat-header-cell *matHeaderCellDef class=\"font-bold\">Stat </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let element\" class=\"capitalize-first-letter\"> {{element.stat.name}} </mat-cell>\r\n                </div>\r\n\r\n                <div matColumnDef=\"pokemonBaseStat\">\r\n                  <mat-header-cell *matHeaderCellDef class=\"font-bold\"> Base Stat</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let element\"> {{element.base_stat}} </mat-cell>\r\n                </div>\r\n\r\n                <mat-header-row *matHeaderRowDef=\"displayedColumnStats\"></mat-header-row>\r\n                <mat-row *matRowDef=\"let row; columns: displayedColumnStats;\"></mat-row>\r\n\r\n              </mat-table>\r\n            </div>\r\n          </mat-card-content>\r\n        </mat-card>\r\n      </div>\r\n\r\n      <br>\r\n\r\n      <div>\r\n        <button (click)=\"loadPokemon()\" class=\"capitalize text-lg bg-secondary-100 text-secondary-200\">load another pokemon</button>\r\n      </div>\r\n\r\n    </div>\r\n\r\n  </div>\r\n\r\n</div>\r\n\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-86e2311c54fbca7431c12e070d0fd5b0ebe343eec0553a392f182ba0e04a8f86613233d26ee47718fd0e7a65078f580c76a1fcc928ce55de81193d6618025bc4",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 798,
                            "end": 811,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 334,
                            "tagName": {
                                "pos": 799,
                                "end": 807,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 43,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 35,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 49,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  standalone: true,\n  imports: [CommonModule],\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 51
                    }
                }
            }
        },
        {
            "name": "MyCounterComponent",
            "id": "component-MyCounterComponent-141f7976232b174b1c37e2a36b6e2f2ca7c9c13ea08464fad690249f4b6fb2907cc29df70985945970db354fef97c38006c8fa11e4a586ed9ab58944847b88de",
            "file": "src/app/my-counter/my-counter.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-my-counter",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./my-counter.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "count$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<number>",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "decrement",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "increment",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "reset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Store } from '@ngrx/store';\r\nimport { increment, decrement, reset } from '../counter.actions';\r\n\r\n@Component({\r\n  selector: 'app-my-counter',\r\n  templateUrl: './my-counter.component.html',\r\n})\r\nexport class MyCounterComponent {\r\n  count$: Observable<number>;\r\n\r\n  constructor(private store: Store<{ count: number }>) {\r\n    this.count$ = store.select('count');\r\n    this.count$.subscribe((value:any) => console.log(value));\r\n  }\r\n\r\n  increment() {\r\n    this.store.dispatch(increment());\r\n  }\r\n\r\n  decrement() {\r\n    this.store.dispatch(decrement());\r\n  }\r\n\r\n  reset() {\r\n    this.store.dispatch(reset());\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<literal type>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<literal type>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<button (click)=\"increment()\">Increment</button>\r\n\r\n<div>Current Count: {{ count$ | async }}</div>\r\n\r\n<button (click)=\"decrement()\">Decrement</button>\r\n\r\n<button (click)=\"reset()\">Reset Counter</button>\r\n"
        },
        {
            "name": "MyPokemonComponent",
            "id": "component-MyPokemonComponent-b1c8683f342d8014fd879c3c70acebea428d1f40d1472d52b25b2b60db643058c2f6d978400eaf7085ef87cc9e9d7b6d2129827cb1d77351e534f3989822328a",
            "file": "src/app/my-pokemon/pokemon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-pokemon",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./pokemon.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "seenPokemon$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<PokemonData>",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "addPokemon",
                    "args": [
                        {
                            "name": "pokemonName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "pokemonTotalStats",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pokemonName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "pokemonTotalStats",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component} from \"@angular/core\";\r\nimport {Observable} from \"rxjs\";\r\nimport {PokemonData} from \"../shared/PokemonData\";\r\nimport {Store} from \"@ngrx/store\";\r\nimport {addPokemon} from \"../shared/actions/seenPokemon.actions\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-pokemon',\r\n  templateUrl: './pokemon.component.html',\r\n})\r\nexport class MyPokemonComponent{\r\n  seenPokemon$: Observable<PokemonData>;\r\n\r\n  constructor(private store: Store<{seenPokemon: PokemonData}>) {\r\n    this.seenPokemon$ = store.select('seenPokemon');\r\n    // this.seenPokemon$.subscribe((value:any) => console.log(value));\r\n  }\r\n\r\n  addPokemon(pokemonName: string, pokemonTotalStats: number){\r\n    this.store.dispatch(addPokemon({pokemonName, pokemonTotalStats}));\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<literal type>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<literal type>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<button (click)=\"addPokemon('Testing', 200)\" > Add Pokemon </button>\r\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-6794d16d4486ea6f3d09a209899f7ae40810b145e09bd11c7c137b33e4825479855b57272f7d45e5dac66724c9aafa4f7a43b8a9c01249e2176c30896297b4c6",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { AppComponent } from './app.component';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { MyCounterComponent } from './my-counter/my-counter.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { counterReducer } from './counter.reducer';\r\nimport { pokemonReducer } from \"./shared/reducers/seenPokemon.reducer\";\r\nimport { provideAnimationsAsync } from '@angular/platform-browser/animations/async';\r\nimport {MatCard, MatCardContent} from \"@angular/material/card\";\r\nimport {\r\n  MatCell,\r\n  MatCellDef,\r\n  MatHeaderCell,\r\n  MatHeaderCellDef,\r\n  MatHeaderRow, MatHeaderRowDef,\r\n  MatRow, MatRowDef,\r\n  MatTable, MatTableModule\r\n} from \"@angular/material/table\";\r\nimport {HttpClientModule} from \"@angular/common/http\";\r\nimport {MyPokemonComponent} from \"./my-pokemon/pokemon.component\";\r\nimport {NgOptimizedImage} from \"@angular/common\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MyCounterComponent,\r\n    MyPokemonComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    StoreModule.forRoot({count: counterReducer}, {initialState: {}}),\r\n    // StoreModule.forRoot({seenPokemon: pokemonReducer}, {initialState: {}}),\r\n    MatCardContent,\r\n    MatTable,\r\n    MatHeaderCell,\r\n    MatCell,\r\n    MatHeaderCellDef,\r\n    MatCellDef,\r\n    MatHeaderRow,\r\n    MatRow,\r\n    MatHeaderRowDef,\r\n    MatRowDef,\r\n    HttpClientModule,\r\n    MatTableModule,\r\n    NgOptimizedImage,\r\n    MatCard\r\n  ],\r\n  providers: [\r\n    provideAnimationsAsync()\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "MyCounterComponent"
                        },
                        {
                            "name": "MyPokemonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "MatCard"
                        },
                        {
                            "name": "MatCardContent"
                        },
                        {
                            "name": "MatCell"
                        },
                        {
                            "name": "MatCellDef"
                        },
                        {
                            "name": "MatHeaderCell"
                        },
                        {
                            "name": "MatHeaderCellDef"
                        },
                        {
                            "name": "MatHeaderRow"
                        },
                        {
                            "name": "MatHeaderRowDef"
                        },
                        {
                            "name": "MatRow"
                        },
                        {
                            "name": "MatRowDef"
                        },
                        {
                            "name": "MatTable"
                        },
                        {
                            "name": "NgOptimizedImage"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-1f33c211f5ed8f78b567e3368224045ed4677b0f123c38e84265ccdca0819c174aecf3a8568fd5608f338396e80a84adffc3a5f8f849844802c12983d2ee91c0",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nexport const routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "addPokemon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/actions/seenPokemon.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction('[Pokemon Component] Add Pokemon', props<{pokemonName: string, pokemonTotalStats: number}>())"
            },
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\r\n  providers: [provideRouter(routes), provideHttpClient(), provideStore()]\r\n}"
            },
            {
                "name": "counterReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/counter.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\r\n  initialState,\r\n  on(increment, (state) => state + 1),\r\n  on(decrement, (state) => state - 1),\r\n  on(reset, (state) => 0)\r\n)"
            },
            {
                "name": "decrement",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/counter.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction('[Counter Component] Decrement')"
            },
            {
                "name": "increment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/counter.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction('[Counter Component] Increment')"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/counter.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "0"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/reducers/seenPokemon.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n    pokemonName: \"\",\r\n    pokemonTotalStats: 0\r\n  }"
            },
            {
                "name": "pokemonReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/reducers/seenPokemon.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\r\n  initialState,\r\n  on(addPokemon, (state) => ({pokemonName: \"testingggg\", pokemonTotalStats: 100})),\r\n  // on(removePokemon, (state) => state),\r\n  // on(clearPokemon, (state) => (state = []))\r\n)"
            },
            {
                "name": "reset",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/counter.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction('[Counter Component] Reset')"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/shared/actions/seenPokemon.actions.ts": [
                {
                    "name": "addPokemon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/actions/seenPokemon.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction('[Pokemon Component] Add Pokemon', props<{pokemonName: string, pokemonTotalStats: number}>())"
                }
            ],
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\r\n  providers: [provideRouter(routes), provideHttpClient(), provideStore()]\r\n}"
                }
            ],
            "src/app/counter.reducer.ts": [
                {
                    "name": "counterReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/counter.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\r\n  initialState,\r\n  on(increment, (state) => state + 1),\r\n  on(decrement, (state) => state - 1),\r\n  on(reset, (state) => 0)\r\n)"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/counter.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "0"
                }
            ],
            "src/app/counter.actions.ts": [
                {
                    "name": "decrement",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/counter.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction('[Counter Component] Decrement')"
                },
                {
                    "name": "increment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/counter.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction('[Counter Component] Increment')"
                },
                {
                    "name": "reset",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/counter.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction('[Counter Component] Reset')"
                }
            ],
            "src/app/shared/reducers/seenPokemon.reducer.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/reducers/seenPokemon.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n    pokemonName: \"\",\r\n    pokemonTotalStats: 0\r\n  }"
                },
                {
                    "name": "pokemonReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/reducers/seenPokemon.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\r\n  initialState,\r\n  on(addPokemon, (state) => ({pokemonName: \"testingggg\", pokemonTotalStats: 100})),\r\n  // on(removePokemon, (state) => state),\r\n  // on(clearPokemon, (state) => (state = []))\r\n)"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 5,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/counter.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "decrement",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/counter.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "increment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/counter.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "reset",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/counter.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "counterReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/counter.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DataService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/my-counter/my-counter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MyCounterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/my-pokemon/pokemon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MyPokemonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/PokemonData.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PokemonData",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/actions/seenPokemon.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "addPokemon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/reducers/seenPokemon.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/reducers/seenPokemon.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "pokemonReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            }
        ]
    }
}